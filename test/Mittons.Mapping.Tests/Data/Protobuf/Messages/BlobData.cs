namespace Mittons.Mapping.Tests.Data.Protobuf.Messages;

internal class BlobData : DataSourceGeneratorAttribute<byte[], byte[], byte[], int>
{
    protected override IEnumerable<Func<(byte[], byte[], byte[], int)>> GenerateDataSources(DataGeneratorMetadata dataGeneratorMetadata)
    {
        yield return () => (
            [
                0x10, 0xa1, 0x01, 0x1a, 0xaa, 0x01, 0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [
                0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [],
            161
        );

        yield return () => (
            [
                0x1a, 0xaa, 0x01, 0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
                0x10, 0xa1, 0x01,
            ],
            [
                0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [],
            161
        );

        yield return () => (
            [
                0x0a, 0xaa, 0x01, 0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
                0x10, 0xa1, 0x01,
            ],
            [
                0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [],
            161
        );

        yield return () => (
            [
                0x0a, 0xaa, 0x01, 0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [
                0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [],
            170
        );

        yield return () => (
            [
                0x0a, 0xaa, 0x01, 0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [
                0x78, 0x9c, 0xe3, 0x92, 0xe1, 0xd8, 0x7f, 0x6b, 0xd7, 0xe9,
                0x7d, 0x2c, 0x02, 0xfb, 0xff, 0xcd, 0x68, 0xda, 0xcb, 0x22, 0xf1, 0xe0, 0xc4, 0xc1, 0xa3, 0x8b,
                0x98, 0x14, 0x0e, 0xfc, 0x5f, 0xd6, 0xb4, 0x90, 0x49, 0x89, 0xcf, 0xbf, 0x38, 0x37, 0x38, 0x39,
                0x23, 0x35, 0x37, 0x51, 0x37, 0xcc, 0x40, 0xcf, 0x4c, 0x89, 0xcb, 0x25, 0x35, 0xaf, 0x38, 0xd5,
                0x2f, 0x3f, 0x25, 0xb5, 0xb8, 0x89, 0x91, 0x27, 0xbf, 0x38, 0x37, 0xb3, 0x34, 0x57, 0xdf, 0x50,
                0xcf, 0x54, 0xcf, 0xb0, 0x81, 0xe9, 0xd9, 0xe5, 0x3f, 0x17, 0x58, 0x3b, 0x98, 0xb6, 0xf2, 0x4e,
                0x62, 0xf2, 0xca, 0x28, 0x29, 0x29, 0xb0, 0xd2, 0xd7, 0x4f, 0xc9, 0x2f, 0xcf, 0xcb, 0xc9, 0x4f,
                0x4c, 0xd1, 0x4b, 0x4f, 0xcd, 0x4f, 0x4b, 0x4c, 0x2a, 0xca, 0xcc, 0xd6, 0x4b, 0x49, 0xd5, 0xcf,
                0xcb, 0x2f, 0x2a, 0xc9, 0xd0, 0x4d, 0xcc, 0x4d, 0x2d, 0xca, 0x4c, 0x4e, 0xd4, 0x2f, 0x2d, 0xd6,
                0x4f, 0xc9, 0x2c, 0x2e, 0x01, 0xb2, 0x4b, 0x74, 0xf3, 0xd3, 0x74, 0x93, 0xf3, 0x73, 0x4a, 0x73,
                0x93, 0x32, 0x13, 0x75, 0x4b, 0x0b, 0x52, 0x12, 0x4b, 0x52, 0x8b, 0x01, 0x75, 0xfb, 0x3e, 0xc9,
            ],
            [],
            170
        );
    }
}
